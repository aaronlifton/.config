;; [<from> <to>] o
;; [<from> <to> <conditions>] or
;; [<from> <to> <conditions> <other options>]
;; <from> can be keywords defined in froms or keycodes without `{:not-from true}`
;; <to> can be keywords defined in tos, keycodes without `{:not-to true}`, string (shell script)
;; <conditions> can be keywords defined in layers, devices, applications
;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }
;;  [{:des "a to 1" :rules [[:a :1]]} ;; a to 1
;;   {:des "command a to control 1" :rules [:!Ca :!T1]} ;; command a to control 1
;;   {:des "my spacebar to control 1" :rules [:my-spacebar :!T1]} ;; my-spacebar to control 1
;;   {:des "press b to insert 12" :rules [:b [:1 :2]]}  ;; key to key
;;   {:des "c to example osascript" :rules [:c "osascript -e 'display dialog \"example apple script\"'"]} ;; key to shell script
;;   {:des "d to 1 then example osascript" :rules [:d [:1 "osascript -e 'display dialog \"example apple script\"'"]]} ;; key to key then shell script
;;   {:des "simultaneous e f to 3" :rules [[:e :f] :3]} ;; simultaneous key to key
;;   {:des "g to 4 when variable vi-mode is 1" :rules [:g :4 :vi-mode]} ;; vi-mode is 1
;;   {:des "h to 5 when variable vi-mode is not 1" :rules [:h :5 :!vi-mode]} ;; vi-mode is 0
;;   {:des "i to 6 only for device hhkb-bt" :rules [:i :6 :hhkb-bt]} ;; key to key in layer b (in layer a) specific to hhkb-bt device
;;   {:des "j to 7 on hhkb-bt when variable vi-mode is 1" :rules [:j :7 [:vi-mode :hhkb-bt]]} ;; multiple condition
;;   {:des "press h insert 8 then set variable some-mode to 0" :rules [:h [:8 {:set ["some-mode" 0]}]]}] ;; h to 8 and set_variable

 ;; https://gist.github.com/justinschuldt/3ce9a22c1446d65261716851c9cd57eb
 ;; code won't read cheatsheet section
 ;; ! stand for mandatory
 ;; # stand for optional
 ;; C T O S for left command control optional shift
 ;; F for fn
 ;; need to prefix C T O S F with ! or #
 ;
 ;
 ;
 ; ------------------------------------------------------------------------------|
 ; SUMMARY                                                                       |
;; ------------------------------------------------------------------------------|
 ; Karabiner-Elements is a low level utility to manage macOS keyboard behavior.  |
 ; The JSON config for K-E is awkward to manage at any level of complexity and   |
 ; thus we use Goku to maintain the configuration in EDN and compile it out to   |
 ; native K-E JSON config.                                                       |
 ; ------------------------------------------------------------------------------|
 ; REFERENCES      | URL                                                         |
 ; ------------------------------------------------------------------------------|
 ; Karabiner-El:   | https://karabiner-elements.pqrs.org                         |
 ; GokuRakuJoudo:  | https://github.com/yqrashawn/GokuRakuJoudo                  |
 ; EDN format:     | https://github.com/edn-format/edn                           |
 ; Goku Tutorial:  | https://github.com/yqrashawn/GokuRakuJoudo/                 |
 ;                 | blob/master/tutorial.md                                     |
 ; Key Codes:      | https://github.com/yqrashawn/GokuRakuJoudo/                 |
 ;                 | blob/master/src/karabiner_configurator/keys_info.clj        |
 ; Goku Rules      | https://github.com/yqrashawn/GokuRakuJoudo/                 |
 ;                 | blob/master/src/karabiner_configurator/rules.clj            |
 ; From Modifiers: | https://karabiner-elements.pqrs.org/docs/json/              |
 ;                 | complex-modifications-manipulator-definition/from/modifiers/|
 ; Examples:       | https://github.com/yqrashawn/GokuRakuJoudo/                 |
 ;                 | blob/master/examples.org                                    |
 ; Sample Configs: | https://github.com/yqrashawn/GokuRakuJoudo/                 |
 ;                 | tree/master/resources/configurations/edn                    |
;--------------------------------------------------------------------------------|
 {:cheatsheet {:!Ca        "command a" ;; mandatory left_command
               :!Ta        "control a" ;; mandatory left_control
               :!Oa        "option a"
               :!Sa        "shift a"
               :#Sa        "shift a" ;; keycode a, optional left_shift
               :!CTOa      "command control option a"
               :!Cspacebar "command space"
               :!Fa        "fn a"
               :##a        "keycode a optional any"
               :!!a        "mandatory hyper(control command option shift) a "}
  ; :sim 50 :delay 500 :alone 500 :held 500 :simlayer-threshold 210
  ; :sim 50 :delay 50 :alone 100 :held 500 :simlayer-threshold 210
  ; :sim 50 :delay 50 :alone 1000 :held 500 :simlayer-threshold 210

  ; faster settings
  ; :sim 5 :delay 0 :alone 50 :held  100
  ; :simlayer-threshold 500

  :sim 500 :delay 50 :alone 50 :held 500 :afterup 0
  ; :sim 50 :delay 50 :alone 50 :held 500
  :simlayer-threshold 500
  ; :simlayer-threshold 500
  ;
  :templates {:open "open \"%s\""
              :launch-app "open -a '%s'"
              :activate "osascript -e 'tell application \"%s\" to activate'"
              :alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
              :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
              :km-with-argument "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\" with parameter \"%s\"'"
              ; :btt "open \"btt://trigger_named/?uuid=%s\""
              ; :btt "open \"btt://trigger_named/?trigger_name=TriggerName\""
              :btt2 "osascript -e k'
                tell application \"BetterTouchTool\"
                    if frontmost then
                        set visible to false
                    else
                        activate
                        if (count windows) is 0 then
                            open home
                        end if
                        set index of window 1 to 1
                    end if
                end tell'"
              :btt "osascript -e k'
                  tell application \"BetterTouchTool\"
                  execute_assigned_actions_for_trigger \"%s\"
                end tell'"
              :toggle-finder "osascript -e k'
                tell application \"Finder\"
                    if frontmost then
                        set visible to false
                    else
                        open -a \"Finder\"
                        activate
                        if (count windows) is 0 then
                            open home
                        end if
                        set index of window 1 to 1
                    end if
                end tell'"
              ; TOGGLE BROWSER: most useful if finder assigned to "all-desktops"
              :toggle-browser "osascript -e '
                tell application \"Google Chrome\"
                    if frontmost then
                        set visible of process \"Google Chrome\" to false
                    else
                        activate
                        if (count windows) is 0 then
                            open home
                        end if
                        set index of window 1 to 1
                    end if
                end tell'"
              ; Enable or disable "Play user interface sound effects"
              ; ui_audio_enabled 0 (off) or 1 (on)
              :ui_audio_enabled "defaults write 'Apple Global Domain' com.apple.sound.uiaudio.enabled -int %s"}
  :devices {:cidoo-v65 [{:vendor_id 12815 :product_id 20565}]
            :gmk67 [{:vendor_id 1452 :product_id 591}]}
  :layers    {; implement caps lock mode
              :caps_layer {:key :caps_lock :alone {:key :CTOleft_shift}}
              ; :caps_layer {:key :caps_lock :alone {:key :CTOleft_shift}}
              ; make tab a layer if/when it is held
              :tab_layer {:key :tab :alone {:key :tab}}}
  :simlayers {;; make w key a simlayer key
              ;; layers works too, but only recommended for none typing keys like . , tab
              ;; or keys like z, which used less often
              ; :a-mode {:key :a}
              :maestro-mode {:key :q}
              ; implement vs code mode
              ; DISABLED FOR LAUNCH MODE V2
              ; :launch-mode {:key :w}
              ; :q-mode {:key :q}
              ; :wez-mode  {:key :1}
              :right_command_layer {:key :right_command}
              ; :vim-movement-mode {:key :e}
              :caps2-mode  {:key :caps_lock}
              :fn_layer {:key :fn :alone {:modi [:fn]}}
              :superduper-mode {:key :f20}
              :esc-layer {:key :escape :alone {:key :fn}}}
  ; Find app ID using applescript: osascript -e 'id of app "Finder"'
  :applications {:code ["^com\\.microsoft\\.VSCode?$"]
                 ; :code ["com.microsoft.VSCode"]
                 :finder ["^com\\.apple\\.finder$"]
                 :1password ["^com\\.1password\\.1password$"]
                 :wezterm ["^com\\.github\\.wez\\.wezterm$"]
                 :obsidian ["^md\\.obsidian$"]
                 :terminals ["^com\\.wez\\.term$"
                             "^org\\.alacritty$"
                             "^net\\.kovidgoyal\\.kitty$"
            		             "^com\\.microsoft\\.VSCode?$"
                  			     "^com\\.neovide\\.neovide$"]
                 :coding ["^com\\.github\\.wez\\.wezterm$"
                          "^org\\.alacritty$"
                          "^net\\.kovidgoyal\\.kitty$"
                          "^com\\.microsoft\\.VSCode?$"
                  			  "^com\\.neovide\\.neovide$"]
                 :bitwig ["^com\\.bitwig\\.studio$"]}
  :main [;; each manipulator has a description and multiple rules

         ;;{:des "..."                               ;; -> description
         ;;
         ;; karabiner docs: ;; https://pqrs.org/osx/karabiner/json.html#complex_modifications-manipulator-definition
         ;; <other options> includs ~to_if_alone~, ~to_if_held_down~,~to_after_key_up~, ~to_delayed_action~ and ~parameters~.
         ;;

         ;; (custom variables) & modifiers -> Advanced
         ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable

         ;;{:des "testing"
         ;; :rules [;; Alt -> Hyper
               ;; [:##right_alt :!QWEright_shift]

               ;; easier reach to modifier keys
               ;;[:##slash :right_command  nil {:alone :slash}]
               ;; [:##z     :left_control   nil {:alone :z}]

               ;; easier key launches
               ;;[[:f :j] :!Ospacebar] ;; alfred

               ;; Alt -> [] or Meh(Control Shift Option): secondary thumb keys
               ;; [:right_alt :!CTOleft_shift :apple]
               ;; [:##application :!TOleft_shift :g915]
               ; [:##left_control :!TOleft_shift :apple]
         ;;         ]}
         {:des "modifier keys for certain devices"
          :rules [:gmk67
                  ; [:##left_command :left_option]
                  ; [:##left_option :left_command]
                  [:##right_option :left_option]]}
         {:des "caps is CS1 in bitwig"
          :rules [:bitwig [:!CS1 :caps_lock]]}
         {:des "window switching"
          :rules [:!FCescape :!CSescape]}

         {:des "additional modifier keys on fn layer"
          :rules [:fn_layer
                  [:left_control :!Sf1]
                  ; [:!Ograve_accent_and_tilde :!OSescape] ; dangerous
                  [:left_option :!Sf3]
                  [:left_command :!Sf2]
                  [:spacebar :!Sf4]
                  [:right_command :!Sf5]
                  [:right_shift ["fn-shift" 1]]]}
                  ; [:fn-shift
                  ;  [:left_control :!Sf6]
                  ;  [:left_option :!Sf7]
                  ;  [:left_command :!Sf8]
                  ;  [:spacebar :!Sf9]
                  ;  [:right_command :!Sf10]]]}
         ; {:des "caps_lock to hyper (ctrl-opt-cmd-shift) on hold, ESC on tap"
         ;  :rules [[:##caps_lock :!CTSleft_option nil {:alone :escape}]]}
         ; {:des   "caps_lock to left_control when pressed alone, to ctrl as modifier"
         ;  :rules [[:##caps_lock :left_control nil {:alone :escape}]]}
         ; uncomment this:
         {:des "Change caps_lock to 4 modifiers combination, f19 when used alone"
          :rules [[:condi :!coding] [:##caps_lock :!CTOleft_shift nil {:alone [:f19 ["caps-delay" 1]]
                                                                       :delayed {:invoked ["caps-delay" 0] :canceled ["caps-delay" 0]}}]]}
         {:des "Tap caps_lock then keys"
          :rules [[:condi :!coding] :caps-delay [:1 :z]]}
         {:des "Caps_lock to escape in neovim"
          :rules [[:condi :coding]
                  [:!Scaps_lock :q]
                  [:##caps_lock :escape]]}
         {:des "left command delay"
          :rules [[:##left_command :##left_command nil {:alone [:f19 ["caps-delay" 1]]
                                                        :delayed {:invoked ["caps-delay" 0] :canceled ["caps-delay" 0]}}]]}
         {:des "right command layer"
          :rules [:right_command_layer
                  [:comma :f17]
                  [:period :f18]
                  [:slash :f19]
                  [:right_shift :f20]]}
         {:des "SD Mode <- S+D" :rules [[{:sim [:s :d]
                                          :simo {:interrupt true
                                                 :dorder :insensitive
                                                 :uorder :insensitive
                                                 :afterup {:set ["superduper-mode" 0]}}} {:set ["superduper-mode" 1]}]]}
         {:des "SD Mode B -> Ctrl+B (Tmux prefix)" :rules [:superduper-mode [:##b :!Tb]]}
         {:des "SD Mode Z -> Undo" :rules [:superduper-mode [:##z :!Cz]]}
         {:des "SD Mode"
          :rules [[:condi :superduper-mode :!coding]
                  [:##h :left_arrow]
                  [:##j :down_arrow]
                  [:##k :up_arrow]
                  [:##l :right_arrow]
                  [:##u :page_up]
                  [:##i :page_down]
                  [:##y :home]
                  [:##o :end]
                  [:##n :delete_forward]
                  [:##m :delete_or_backspace]
                  [:##spacebar :escape]
                  [:1 [:btt "9E3279CF-9135-4F15-917A-60CD9A22AC20"]]]}
                  ; [:left_arrow :keypad_1]]}
         ; {:des "Change right cmd to f19"
         ;  :rules
         ; {:des "Change right cmd to f19"
         ;  :rules }
         ;
         ; ; {:des "Change right_option to 4 modifiers combination, f17 when used alone"
         ;  :rules [[:right_option :!COTleft_shift nil {:alone [:f17]}]]}
         ; {:des "caps lock to hyper"
         ;  :rules [:##caps_lock :!!]}
         ; {:des "vim movement mode"
         ;  :rules [:vim-movement-mode
         ;          [[:y :y] :end]]}
         {:des "caps_lock layer"
          :rules [[:condi :caps2-mode :!coding]
            ; vim keys
            ; navigation
                  [:##h :left_arrow] ; even with f, still do left
                  [:##k :up_arrow]
                  [:##j :down_arrow]
                  [:##l :right_arrow]
                  [:##3 :home]
                  [:##4 :end]
                  [:##s :return_or_enter]
                  [:##f :delete_or_backspace]
                  [:##g :escape]
                  [:##x :delete_forward]
                  ; [:##left_arrow [:!CTOleft_shift :left_arrow]
                  [:##up_arrow :!Tup_arrow]
                  [:##escape :grave_accent_and_tilde]]}
         {:des   "Press right_shift twice to enter double shift mode, press right_shift once to leave it"
          :rules [[:right_shift ["double-right-shift-mode" 1] ["shift-pressed-once" 1]]
                  [:right_shift [:right_shift ["shift-pressed-once" 1]] ["double-right-shift-mode" 0] {:delayed {:invoked ["shift-pressed-once" 0] :canceled ["shift-pressed-once" 0]}}]
                  :double-right-shift-mode
                  [:right_shift ["double-right-shift-mode" 0]]
                  [:1 "say 'know we are in double shift mode'"]]}
         {:des "Extend Layer - CapsLock (quick release for ESC)"
          :rules [[:##caps_lock ["extend" 1] [:!symbols :!mouse :!shifted :!system] {:afterup ["extend" 0] :alone :escape}]
                  :extend
                    ; functions
                  [:##1 :f1] [:##2 :f2] [:##3 :f3] [:##4 :f4] [:##5 :f5] [:##6 :f6]
                  [:##7 :f7] [:##8 :f8] [:##9 :f9] [:##0 :f10] [:##hyphen :f11] [:##equal_sign :f12]
                    ; modifiers
                  [:##a :left_control] [:##s :left_shift] [:##d :left_option] [:##f :left_command]
                    ; arrows
                  [:##j :left_arrow]
                  [:##k :down_arrow]
                  [:##i :up_arrow]
                  [:##l :right_arrow]
                    ; shortcuts
                  [:##u :!Cleft_arrow :!terminals]
                  [:##o :!Cright_arrow :!terminals]
                  [:##z :!Cz] [:##x :!Cx] [:##c :!Cc] [:##v :!Cv]]}
         {:des "fn keys"
          :rules [[:!CS1 :f1 :!code]
                  [:!CS2 :f2 :!code]
                  [:!CS3 :f3 :!code]
                  [:!CS4 :f4 :!code]
                  [:!CS5 :f5 :!code]
                  [:!CS6 :f6 :!code]
                  [:!CS7 :f7 :!code]
                  [:!CS8 :f8 :!code]
                  [:!CS9 :f9 :!code]
                  [:!CS0 :f10 :!code]
                  [:!CShyphen :f11 :!code]
                  [:!CSequal_sign :f12 :!code]
                  [:!OS1 :!Sf1 :!code]
                  [:!OS2 :!Sf2 :!code]
                  [:!OS3 :!Sf3 :!code]
                  [:!OS4 :!Sf4 :!code]
                  [:!OS5 :!Sf5 :!code]
                  [:!OS6 :!Sf6 :!code]
                  [:!OS7 :!Sf7 :!code]
                  [:!OS8 :!Sf8 :!code]
                  [:!OS9 :!Sf9 :!code]
                  [:!OS0 :!Sf10 :!code]
                  [:!OShyphen :!Sf11 :!code]
                  [:!OSequal_sign :!Sf12 :!code]]}
         {:des "Work layer - Esc"
          :rules [[:condi :esc-layer :!coding]
                  [:q [:open "/Applications/Microsoft Teams.app"]]
                  [:w [:open "/Applications/Microsoft Outlook.app"]]
                  [:e [:open "/Applications/Slack.app"]]]}
         {:des "a-mode for hjkl movement and nm enter and ui tab and ,. PageDn/Up"
          :rules [:a-mode
                  [:##h :left_arrow]
                  [:##j :down_arrow]
                  [:##k :up_arrow]
                  [:##l :right_arrow]
                  [:##n :return_or_enter]
                  [:##m :return_or_enter]
                  [:##u :tab]
                  [:##i :tab]
                  [:comma :page_down]
                  [:period :page_up]]}
         {:des   "press j and l simultaneously to f16"
          :rules [[[:j :l] :f16]]}
         {:des   "shortcut to f12"
          :rules [[:!Tequal_sign :f12]]}
         {:des "tab+d opens mission control"
          :rules [[:condi :tab_layer :!coding]
                  [:##e :mission_control]  ; make command + space  space + space  space
                  [:##d :!Cspacebar]]}
         {:des "ctrl+esc is grave accent"
          :rules [[:!Tescape :grave_accent_and_tilde]]}
         ; {:des "ctrl+esc is tilde (cmd+escape)"
         ;  :rules [[:!Tescape :!Sgrave_accent_and_tilde]]}
         {:des "cmd+escape is cmd+grave"
          :rules [[:!Cescape :!Cgrave_accent_and_tilde]]}
         ;  i````~
         ; {:des "z is command when held"
         ;          ; :rules [[:##z :!CTOleft_command nil {:alone :##z}]]
         ;  :rules [[:##z :left_command nil {:alone :##z}]]}
         ; ; {:des "/ is tcommand when held"
         ;          ; :rules [[:##slash :!CTOleft_command nil {:alone :##slash}]]
         ;  :rules [[:##slash :left_command nil {:alone :##slash}]]}
         {:des "hyper 1 to cleanup personal folder"
          :rules [[:!!1 "rm -r ~/personal && mkdir ~/personal"]]}
      ;;  {:des "z is command when held"
      ;;   :rules [[:##z :!CTOleft_command nil {:alone :##z}]]
      ;;   :rules [[:##z :left_command nil {:alone :##z}]]}
      ;;  {:des "/ is command when held"
      ;;   :rules [[:##slash :!CTOleft_command nil {:alone :##slash}]]
      ;;   :rules [[:##slash :left_command nil {:alone :##slash}]]}
      ;   {:des "command+escape is tilde"
      ;    :rules [[:right_option :right_alt]]}
         {:des "vscode rules"
          :rules [:code [:##right_option :f16]]}
      ;;    [:p :m]
      ;;  {:des "switch control and command"
      ;;   :rules [[:##left_control :left_command]
      ;;           [:##left_command :left_control]]}
         {:des "maestro-mode"
          :rules [[:condi :maestro-mode :!coding]
                  [:d [:km "1 2FA Market"]]
                  [:e [:km "0 Login V2"]]]} ;; WIP
        ; {:des "sub-launch mode"
         ;  :rules [[:q {:afterup {:set ["sub-launch-mode" 0]}} {:set "sub-launch-mode" 1} :q]]}
         ; {:des "sub-launch mode"
         ;  :rules [:k [:open "/Applications/Microsoft Edge.app"]]}
         {:des "QW Mode <- Q+W" :rules [[{:sim [:q :w]
                                          :simo {:interrupt true
                                                 :dorder :insensitive
                                                 :uorder :insensitive
                                                 :afterup {:set ["qw-mode" 0]}}} {:set ["qw-mode" 1]}]]}
         ; {:des "QW Mode (alternate launch mode)"
         ;  :rules [:qw-mode
         ;          [:k [:open "/Applications/Microsoft Edge.app"]]
         ;          [:u [:open "/Applications/OmniFocus.app"]]]}
         ;[:##left_command :##left_command nil {:alone [:f19 ["caps-delay" 1]]
         ; :delayed {:invoked ["caps-delay" 0] :canceled ["caps-delay" 0]}}]
         ; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#:~:text=%3Arules%20%5B%5B%3Acondi%20%3Aus%20%3Ahhkb%5D
         {:des "launch mode v2"
          :rules [[:condi :!coding] [:w ["launch-mode-2" 1] nil {:afterup ["launch-mode-2" 0]
                                                                 :alone :w}]
                  ; [:d :!S9 ["launch-mode-2" 1]]
                  ; [:f :!S0 ["launch-mode-2" 1]]
                  ; [:a [:!Sgrave_accent_and_tilde :slash] ["launch-mode-2" 1]]
                  ; [:b "say 'know we are in double shift mode'"] ["launch-mode-2" 1]]}
                  ]}
         {:des "launch mode v2 rules"
          :rules [:launch-mode-2
                  [:h [:open "/Applications/WezTerm.app"]]
                  [:j [:open "/Applications/Visual Studio Code.app"]]
                  [:k [:open "/Applications/Google Chrome.app"]]
                  [:l [:open "/Applications/Obsidian.app"]]
                  [:semicolon [:open "/Applications/Notion.app"]]
                  ; [:period [:open "/Applications/Notion.app"] :qw-mode]

                  ;; 1st row
                  [:u [:open "/Applications/Things3.app"]]
                  [:y [:open "/Applications/TickTick.app"]]
                  ; [:g [:open "/Applications/Setapp/NotePlan.app"]]
                  ;; Numbers right above productivity keys
                  [:6 [:open "/Applications/Setapp/Timing.app"]]
                  [:7 [:open "/Applications/Structured.app"]]
                  [:8 [:open "/Applications/Setapp/NotePlan.app"]]

                  ;; 3rd row
                  [:o [:open "/Users/aaron/Applications/Chrome Apps.localized/Ollama Web UI.app"]]

                  [:n [:open "/Applications/KeePassXC.app"]]
                  [:m [:open "/Applications/1Password.app"]]
                  [:t [:open "/Applications/Taskade.app"]]
                  [:f [:toggle-finder]]
                  ;; 1st row (left)
                  ; [:g [:toggle-browser]]
                  ; [:q [:open "/Applications/Setapp/GoodTask.app"]]
                  [:e [:open "/Applications/Warp.app"]]
                  [:r [:open "/Applications/Spotify.app"]]
                  [:t [:open "/Applications/AI Chat Bot.app"]]
                  ;; 3nd row (left, skipping w)
                  [:z [:open "/Applications/QSpace Pro.app"]]
                  [:c [:open "/System/Applications/Calendar.app"]]]}]}
         ; {:des "launch mode"
         ;  :rules [:wiiiiiiiiiiiiiiiijlaunch-mode
         ;          ;; 2nd row
         ;          [:h [:open "/Applications/WezTerm.app"]]
         ;          [:j [:open "/Applications/Visual Studio Code.app"]]
         ;          [:k [:open "/Applications/Google Chrome Canary.app"]]
         ;          [:l [:open "/Applications/Obsidian.app"]]
         ;          [:semicolon [:open "/Applications/Notion.app"]]
         ;          [:period [:open "/Applications/Notion.app"] :qw-mode]
         ;
         ;          ;; 1st row
         ;          [:u [:open "/Applications/Things3.app"]]
         ;          [:y [:open "/Applications/TickTick.app"]]
         ;          [:g [:open "/Applications/Setapp/NotePlan.app"]]
         ;          ;; Numbers right above productivity keys
         ;          [:6 [:open "/Applications/Setapp/Timing.app"]]
         ;          [:7 [:open "/Applications/Structured.app"]]
         ;          [:8 [:open "/Applications/Setapp/NotePlan.app"]]
         ;
         ;          ;; 3rd row
         ;          [:b [:open "/Users/aaron/Applications/Chrome Canary Apps.localized/Bard.app"]]
         ;
         ;          [:n [:open "/Applications/KeePassXC.app"]]
         ;          [:m [:open "/Applications/1Password.app"]]
         ;          [:t [:open "/Applications/Taskade.app"]]
         ;          [:f [:toggle-finder]]
         ;          ;; 1st row (left)
         ;          ; [:g [:toggle-browser]]
         ;          ; [:q [:open "/Applications/Setapp/GoodTask.app"]]
         ;          [:e [:open "/Applications/Warp.app"]]
         ;          [:r [:open "/Applications/Spotify.app"]]
         ;          [:t [:open "/Applications/AI Chat Bot.app"]]
         ;          ;; 3nd row (left, skipping w)
         ;          [:z [:open "/Applications/QSpace Pro.app"]]
         ;          [:c [:open "/System/Applications/Calendar.app"]]
         ;          ; [:r [:open "/System/Applications/Calendar.app"]]
         ;          ; [:t [:open "/System/Applications/Calendar.app"]]
         ;          ;; number row (AI/GPT Apps)
         ;          [:1 [:open "/Applications/AI Chat Bot.app"]]
         ;          [:2 [:open "/Applications/Setapp/BetterTouchTool.app"]]
         ;          [:3 [:open "/Applications/Karabiner-EventViewer.app"]]
         ;          ;; other
         ;          [:hyphen [:open "/Applications/Tor Browser.app"]]]}]}
         ; {:des "rectangle key chords"
         ;  :rules [[[:left_arrow :down_arrow] :!COleft_arrow] ; 1/2 left
         ;          [[:right_arrow :down_arrow] :!COright_arrow] ; 1/2 right
         ;          [[:left_arrow :up_arrow] :!TOd] ; 1/3 right-then-cycle
         ;          [[:right_arrow :up_arrow] :!COe] ; 2/3 right-then-cycle
         ;          [[:down_arrow :up_arrow] :!CSreturn_or_enter] ; maximize
         ;          ]}]}
         ;
